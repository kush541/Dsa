Q1:set matrix zero
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        bool fr = false;
        bool fc = false;
        int n = matrix.size();
        int m  =matrix[0].size();
        // for row
        for(int i= 0; i <m;i++){
            if(matrix[0][i] == 0){
                fr=true;
                break;
            }
        }
        // for column
         for(int i= 0; i <n;i++){
            if(matrix[i][0] == 0){
                fc=true;
                break;
            }
        }
       for(int i =0; i < n;i++){
           for(int j =0; j <m;j++){
               if(matrix[i][j] == 0){
                   matrix[i][0]=0;
                   matrix[0][j] = 0;
               }
           }
       }
     
     for(int i =1;i <n;i++){
         for(int j =1; j <m;j++){
             if(matrix[i][0]==0 || matrix[0][j] == 0 ){
                 matrix[i][j]=0;
             }
         }
     }
 if(fr==true){
     for(int i =0; i < m;i++){
         matrix[0][i] = 0;
     }
 }
 if(fc==true){
     for(int i =0; i < n;i++){
         matrix[i][0] = 0;
     }
 }


    }
};


Q2:potd  gfg

class Solution{
    public:
        
    // A[]: input array
    // N: size of array
    // Function to find the maximum index difference.
    int maxIndexDiff(int a[], int n) 
    { 
        
      vector<int>maxr(n);
      vector<int>minl(n);
        // for max right
        maxr[n-1]=a[n-1];
        for(int i =n-2;i>=0;i--){
            if(a[i]>maxr[i+1]){
                maxr[i] = a[i];
            }
            else{
                maxr[i] = maxr[i+1];
            }
        }
        minl[0]=a[0];
        for(int i =1; i < n;i++){
            if(a[i]<minl[i-1]){
                minl[i] = a[i];
            }
            else{
                minl[i] = minl[i-1];
            }
        }
        
        int i =0;
        int j =0;
        int ans = 0;
        // j = maxr i = minl
        while(i<n and j<n){
            if(maxr[j]>=minl[i]){
                ans = max(ans,j-i);
                j++;
            }
            else{
                i++;
            }
        }
        return ans;
    }
};

Q3:potd leetcode
class Solution {
public:
    int minimumLength(string s) {
        int i =0;
        int j = s.size()-1;
        
      
        while(i<j){
         
         if(s[i] == s[j]){
             char a  = s[i];
             i++;
             while(s[i]==a and i<=j ){
              i++;
             }
             while(s[j]==a and i<=j){
                 j--;
             }
            
           
         }
         else{
             break;
         }
        }
        return j-i+1;
    }
};
