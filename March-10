 std::unordered_set<int> set1(nums1.begin(), nums1.end());
        std::unordered_set<int> set2(nums2.begin(), nums2.end());

        std::vector<int> result;
        for (const auto& num : set1) {
            if (set2.find(num) != set2.end()) {
                result.push_back(num);
            }
        }

        return result;

class Solution{
public:
	string removeDuplicates(string str) {
	    // code here
	     unordered_map<char,int>mp;
        for(int i=0;i<str.size();i++){
            mp[str[i]]++;
        }
        string ans="";
        for(int i=0;i<str.size();i++){
            if(mp.find(str[i])!=mp.end()){
                ans+=str[i];
                mp.erase(str[i]);
            }
            
        }
        return ans;
	}
};
